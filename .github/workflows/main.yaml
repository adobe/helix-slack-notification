name: Build
on: [push]

env:
  CI_BUILD_NUM: ${{ github.run_id }}
  CI_BRANCH: ${{ github.ref_name }}
  AWS_DEPLOY_ROLE: arn:aws:iam::118435662149:role/helix-gh-deploy-config-service
  AWS_DEPLOY_SECRET_ID: /helix/github-action-secrets

permissions:
  id-token: write
  contents: write  # semantic-release-dry verifies the write permissions
  issues: read # needed by semantic-release

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 20.x
        uses: actions/setup-node@v5
        with:
          node-version: '22.x'
      - run: npm install
      - run: npm test
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test-deploy:
    name: Test Deploy
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    needs: test
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 20.x
        uses: actions/setup-node@v5
        with:
          node-version: '22.x'
      - run: npm install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: us-east-1
          role-to-assume: ${{ env.AWS_DEPLOY_ROLE }}
      - name: Fetch AWS Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          parse-json-secrets: true
          secret-ids: |
            ,${{ env.AWS_DEPLOY_SECRET_ID }}

      - name: Branch Deployment
        run: npm run deploy-ci
      - name: Post-Deployment Integration Test
        run: npm run test-postdeploy

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: test
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 20.x
        uses: actions/setup-node@v5
        with:
          node-version: '22.x'
      - run: npm install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: us-east-1
          role-to-assume: ${{ env.AWS_DEPLOY_ROLE }}
      - name: Fetch AWS Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          parse-json-secrets: true
          secret-ids: |
            ,${{ env.AWS_DEPLOY_SECRET_ID }}

      - name: Semantic Release
        run: npm run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
